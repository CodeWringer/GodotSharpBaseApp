[gd_scene load_steps=7 format=2]

[ext_resource path="res://presentation/views/Main.cs" type="Script" id=1]
[ext_resource path="res://presentation/fonts/roboto/roboto_header1.tres" type="DynamicFont" id=2]
[ext_resource path="res://presentation/fonts/roboto/roboto_regular.tres" type="DynamicFont" id=3]
[ext_resource path="res://presentation/fonts/roboto/roboto_header2.tres" type="DynamicFont" id=4]
[ext_resource path="res://presentation/components/InputFeedback/InputFeedback.tscn" type="PackedScene" id=5]
[ext_resource path="res://presentation/validation/LineEditAlphanumericOnly.cs" type="Script" id=6]

[node name="Main" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )

[node name="Panel" type="Panel" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ScrollContainer" type="ScrollContainer" parent="."]
margin_right = 1024.0
margin_bottom = 600.0
size_flags_horizontal = 3
size_flags_vertical = 3
scroll_horizontal_enabled = false
scroll_vertical = 942

[node name="VBoxContainer" type="VBoxContainer" parent="ScrollContainer"]
margin_top = -942.0
margin_right = 1012.0
margin_bottom = 600.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="LabelTitle" type="Label" parent="ScrollContainer/VBoxContainer"]
margin_right = 1012.0
margin_bottom = 43.0
custom_fonts/font = ExtResource( 2 )
text = "Welcome to the Godot base app template"

[node name="LabelDescription" type="Label" parent="ScrollContainer/VBoxContainer"]
margin_top = 47.0
margin_right = 1012.0
margin_bottom = 374.0
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 3 )
text = "Contained within this template are:
1. An input validation framework - keep scrolling to see examples.
2. A data serialization framework, using the NuGet dependency \"UTF8Json\". 
3. Three undo systems: command, memento/snapshot and delta pattern. 
4. The Roboto font from Google Fonts - all credit goes to their respective owners. 

To get started, make it your own:
1. Change out the `app/icon.png` image for your own. 
2. Change the name of the project to your own. For that, in Godot, navigate to `Project > Project Settings > Application > config` and change the name to your preference. Be mindful that changing the name affects several other things in Godot, such as the name of the user-specific data directory. 
3. If you're working with Visual Studio, the solution file can be found in `app` and is called `app.sln`. 
4. Write your model of business data, inside the `app/business/model` directory and integrate your model into the `app/business/state/ApplicationState.cs` class. 
5. Define the application-level settings as fields inside the `app/business/state/ApplicationSettings.cs` class. "
autowrap = true

[node name="VSpacer" type="Control" parent="ScrollContainer/VBoxContainer"]
margin_top = 378.0
margin_right = 1012.0
margin_bottom = 402.0
rect_min_size = Vector2( 0, 24 )
size_flags_horizontal = 3

[node name="VBoxContainerValidation" type="VBoxContainer" parent="ScrollContainer/VBoxContainer"]
margin_top = 406.0
margin_right = 1012.0
margin_bottom = 584.0

[node name="LabelTitleValidation" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerValidation"]
margin_right = 1012.0
margin_bottom = 33.0
custom_fonts/font = ExtResource( 4 )
text = "Validation"

[node name="LabelDescriptionValidation" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerValidation"]
margin_top = 37.0
margin_right = 1012.0
margin_bottom = 122.0
custom_fonts/font = ExtResource( 3 )
text = "The provided validation framework requires the following to work:
1. An input node. E. g. a LineEdit. 
2. As a child node of the input, an instance of the InputFeedback scene. 
3. The input node must have a script attached, which defines its validator and which may refuse changes made, if validation fails. "
autowrap = true

[node name="VSpacer2" type="Control" parent="ScrollContainer/VBoxContainer/VBoxContainerValidation"]
margin_top = 126.0
margin_right = 1012.0
margin_bottom = 150.0
rect_min_size = Vector2( 0, 24 )
size_flags_horizontal = 3

[node name="HBoxContainer" type="HBoxContainer" parent="ScrollContainer/VBoxContainer/VBoxContainerValidation"]
margin_top = 154.0
margin_right = 1012.0
margin_bottom = 178.0

[node name="Label" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerValidation/HBoxContainer"]
margin_top = 2.0
margin_right = 141.0
margin_bottom = 21.0
custom_fonts/font = ExtResource( 3 )
text = "Alphanumberic only"

[node name="LineEditAlphanumericOnly" type="LineEdit" parent="ScrollContainer/VBoxContainer/VBoxContainerValidation/HBoxContainer"]
margin_left = 145.0
margin_right = 1012.0
margin_bottom = 24.0
size_flags_horizontal = 3
placeholder_text = "Type here"
script = ExtResource( 6 )

[node name="InputFeedback" parent="ScrollContainer/VBoxContainer/VBoxContainerValidation/HBoxContainer/LineEditAlphanumericOnly" instance=ExtResource( 5 )]
visible = false

[node name="VSpacer3" type="Control" parent="ScrollContainer/VBoxContainer"]
margin_top = 588.0
margin_right = 1012.0
margin_bottom = 612.0
rect_min_size = Vector2( 0, 24 )
size_flags_horizontal = 3

[node name="VBoxContainerSerialization" type="VBoxContainer" parent="ScrollContainer/VBoxContainer"]
margin_top = 616.0
margin_right = 1012.0
margin_bottom = 1062.0

[node name="LabelTitleSerialization" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_right = 1012.0
margin_bottom = 33.0
custom_fonts/font = ExtResource( 4 )
text = "Serialization"

[node name="LabelDescriptionValidation2" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 37.0
margin_right = 1012.0
margin_bottom = 232.0
custom_fonts/font = ExtResource( 3 )
text = "The \"Serialize\"-button's \"pressed\"-signal is hooked up in the code for the main scene. Look for it in the Main.cs file. 

Clicking the \"Serialize\"-button will create or overwrite a file called \"example.json\". The file's exact location is relative to the OS the project is run on: 
Windows: %APPDATA%/Godot/app_userdata/[project_name]/example.json
macOS: ~/Library/Application Support/Godot/app_userdata/[project_name]/example.json
Linux: ~/.local/share/godot/app_userdata/[project_name]/example.json

Clicking on the \"Deserialize\"-button will attempt to read the data from disk, if possible. "
autowrap = true

[node name="HBoxContainerToggleMock" type="HBoxContainer" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 236.0
margin_right = 1012.0
margin_bottom = 276.0

[node name="LabelToggleMock" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization/HBoxContainerToggleMock"]
margin_top = 10.0
margin_right = 69.0
margin_bottom = 29.0
custom_fonts/font = ExtResource( 3 )
text = "Use Mock"

[node name="CheckButtonToggleMock" type="CheckButton" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization/HBoxContainerToggleMock"]
margin_left = 73.0
margin_right = 149.0
margin_bottom = 40.0

[node name="ButtonSerialize" type="Button" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 280.0
margin_right = 1012.0
margin_bottom = 300.0
text = "Serialize"

[node name="ButtonDeserialize" type="Button" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 304.0
margin_right = 1012.0
margin_bottom = 324.0
text = "Deserialize"

[node name="InputFeedback" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization/ButtonDeserialize" instance=ExtResource( 5 )]

[node name="LabelSerialization" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 328.0
margin_right = 1012.0
margin_bottom = 347.0
custom_fonts/font = ExtResource( 3 )
autowrap = true

[node name="HBoxContainerAbsolute" type="HBoxContainer" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 351.0
margin_right = 1012.0
margin_bottom = 375.0

[node name="LabelAbsolutePath" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization/HBoxContainerAbsolute"]
margin_top = 2.0
margin_right = 124.0
margin_bottom = 21.0
custom_fonts/font = ExtResource( 3 )
text = "Absolute file path"

[node name="LineEditAbsolutePath" type="LineEdit" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization/HBoxContainerAbsolute"]
margin_left = 128.0
margin_right = 1012.0
margin_bottom = 24.0
size_flags_horizontal = 3
placeholder_text = "An absolute file path like \"C:/temp/abc.json\""

[node name="ButtonSerialize2" type="Button" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 379.0
margin_right = 1012.0
margin_bottom = 399.0
text = "Serialize"

[node name="ButtonDeserialize2" type="Button" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 403.0
margin_right = 1012.0
margin_bottom = 423.0
text = "Deserialize"

[node name="InputFeedback" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization/ButtonDeserialize2" instance=ExtResource( 5 )]

[node name="LabelSerialization2" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerSerialization"]
margin_top = 427.0
margin_right = 1012.0
margin_bottom = 446.0
custom_fonts/font = ExtResource( 3 )
autowrap = true

[node name="VBoxContainerUndo" type="VBoxContainer" parent="ScrollContainer/VBoxContainer"]
margin_top = 1066.0
margin_right = 1012.0
margin_bottom = 1542.0

[node name="LabelTitleUndo" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerUndo"]
margin_right = 1012.0
margin_bottom = 33.0
custom_fonts/font = ExtResource( 4 )
text = "Undo History"

[node name="LabelDescriptionUndo" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerUndo"]
margin_top = 37.0
margin_right = 1012.0
margin_bottom = 122.0
custom_fonts/font = ExtResource( 3 )
text = "The folowing example showcases three undo history design patterns. They don't differ from the view point of the user, but technically, they work fairly differently. 

For each example, you can add and modify a locally kept business state and undo/redo the last alterations made. "
autowrap = true

[node name="LabelTitleCommandPattern" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerUndo"]
margin_top = 126.0
margin_right = 1012.0
margin_bottom = 159.0
custom_fonts/font = ExtResource( 4 )
text = "1. Command pattern"

[node name="LabelDescriptionCommandPattern" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerUndo"]
margin_top = 163.0
margin_right = 1012.0
margin_bottom = 402.0
custom_fonts/font = ExtResource( 3 )
text = "The command pattern works by storing two histories of commands that the user executed in order to modify the business state. 
It is possible to undo and re-do any number of commands, but re-doing is only possible until a completely new command is executed, at which point the history for \"re-doable\" commands is discarded. E. g.: 1. Add an item (new command), 2. move the item (new command), 3. undo moving the item, 4. delete the item (new command). Re-doing the move is now impossible, as the item to move no longer exists. 

For every command, an \"inverse\" command must be provided, which can \"undo\" the state alteration. This design pattern *should* be lightest on memory usage, but is fairly tricky in terms of implementation and maintenance. For example, adding a new business item via a command must be undoable and re-doable in a way so as to produce an item with the exact same properties every time. Consider also the question of whether to store object references or identifying properties in commands that target business items. If a reference is stored and an item in question is deleted, then other commands targeting that item may no longer work, when both the deletion and those other commands are undone or re-done. "
autowrap = true

[node name="LabelTitleSnapshotPattern" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerUndo"]
margin_top = 406.0
margin_right = 1012.0
margin_bottom = 439.0
custom_fonts/font = ExtResource( 4 )
text = "2. Snapshot/Memento pattern"

[node name="LabelTitleDeltaPattern" type="Label" parent="ScrollContainer/VBoxContainer/VBoxContainerUndo"]
margin_top = 443.0
margin_right = 1012.0
margin_bottom = 476.0
custom_fonts/font = ExtResource( 4 )
text = "3. Delta pattern"
